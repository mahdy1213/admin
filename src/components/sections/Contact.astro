---
import { Mail, Phone, MapPin, Send } from 'lucide-astro';
import data from '../../../data.json';
---

<section id="contact" class="section-padding bg-primary-50 dark:bg-primary-800 section-surface">
  <div class="container-width">
    <!-- Section Header -->
    <div class="text-center mb-16">
      <h2 class="text-4xl md:text-5xl font-bold mb-6">Let's Work Together</h2>
      <p class="text-xl text-primary-600 dark:text-primary-300 max-w-3xl mx-auto leading-relaxed">
        Ready to discuss your next project, explore collaboration opportunities, or just connect? 
        I'm always interested in challenging technical problems and impactful solutions.
      </p>
    </div>
    
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 lg:gap-16 max-w-6xl mx-auto">
      <!-- Contact Information -->
      <div class="space-y-8">
        <div>
          <h3 class="text-2xl font-semibold text-primary-900 dark:text-white mb-6">Get In Touch</h3>
          <p class="text-primary-700 dark:text-primary-300 leading-relaxed mb-8">
            Whether you're looking for technical leadership, blockchain expertise, or want to discuss 
            innovative solutions for your startup, I'd love to hear from you.
          </p>
        </div>
        
        <!-- Contact Methods -->
        <div class="space-y-6">
          <a 
            href={`mailto:${data.email}`}
            class="flex items-start space-x-4 p-4 rounded-lg hover:bg-white dark:hover:bg-primary-700 transition-colors duration-200 focus-ring group"
          >
            <div class="p-2 bg-accent-100 dark:bg-accent-900 rounded-lg group-hover:bg-accent-200 dark:group-hover:bg-accent-800 transition-colors duration-200">
              <Mail class="w-5 h-5 text-accent-600 dark:text-accent-400" />
            </div>
            <div>
              <h4 class="font-semibold text-primary-900 dark:text-white">Email</h4>
              <p class="text-primary-600 dark:text-primary-400">{data.email}</p>
              <p class="text-sm text-primary-500 dark:text-primary-500">Best way to reach me</p>
            </div>
          </a>
          
          <div class="flex items-start space-x-4 p-4 rounded-lg">
            <div class="p-2 bg-accent-100 dark:bg-accent-900 rounded-lg">
              <MapPin class="w-5 h-5 text-accent-600 dark:text-accent-400" />
            </div>
            <div>
              <h4 class="font-semibold text-primary-900 dark:text-white">Location</h4>
              <p class="text-primary-600 dark:text-primary-400">{data.location || 'Remote'}</p>
              <p class="text-sm text-primary-500 dark:text-primary-500">Open to remote work globally</p>
            </div>
          </div>
          
          {data.phone && (
            <div class="flex items-start space-x-4 p-4 rounded-lg">
              <div class="p-2 bg-accent-100 dark:bg-accent-900 rounded-lg">
                <Phone class="w-5 h-5 text-accent-600 dark:text-accent-400" />
              </div>
              <div>
                <h4 class="font-semibold text-primary-900 dark:text-white">Phone</h4>
                <p class="text-primary-600 dark:text-primary-400">{data.phone}</p>
                <p class="text-sm text-primary-500 dark:text-primary-500">Available on Telegram/WhatsApp</p>
              </div>
            </div>
          )}
        </div>
        
        <!-- What I'm Looking For -->
        <div class="card p-6">
          <h4 class="font-semibold text-primary-900 dark:text-white mb-4">my specialty</h4>
          <ul class="space-y-2 text-sm">
            <li class="flex items-center space-x-2">
              <div class="w-1.5 h-1.5 bg-accent-600 dark:bg-accent-400 rounded-full"></div>
              <span class="text-primary-700 dark:text-primary-300">Developer and hacker</span>
            </li>
            <li class="flex items-center space-x-2">
              <div class="w-1.5 h-1.5 bg-accent-600 dark:bg-accent-400 rounded-full"></div>
              <span class="text-primary-700 dark:text-primary-300">Solving the most complex engineering algorithms and finding solutions</span>
            </li>
            <li class="flex items-center space-x-2">
              <div class="w-1.5 h-1.5 bg-accent-600 dark:bg-accent-400 rounded-full"></div>
              <span class="text-primary-700 dark:text-primary-300">Team systems management, cyber or development and innovation</span>
            </li>
            <li class="flex items-center space-x-2">
              <div class="w-1.5 h-1.5 bg-accent-600 dark:bg-accent-400 rounded-full"></div>
              <span class="text-primary-700 dark:text-primary-300">Finding ways to penetrate and open locks</span>
            </li>
            <li class="flex items-center space-x-2">
              <div class="w-1.5 h-1.5 bg-accent-600 dark:bg-accent-400 rounded-full"></div>
              <span class="text-primary-700 dark:text-primary-300">Development and construction of malware, virus and antivirus software in one suite</span>
            </li>
          </ul>
        </div>
      </div>
      
      <!-- Contact Form -->
      <div class="card neon-border p-8">
        <form id="contact-form" class="space-y-6" novalidate>
          <div>
            <label for="name" class="block text-sm font-semibold text-primary-900 dark:text-white mb-2">
              Name <span class="text-red-500" aria-label="required">*</span>
            </label>
            <input
              type="text"
              id="name"
              name="name"
              required
              aria-required="true"
              class="w-full px-4 py-3 border border-primary-200 dark:border-primary-600 rounded-lg bg-white dark:bg-primary-800 text-primary-900 dark:text-white placeholder-primary-500 dark:placeholder-primary-400 focus-ring"
              placeholder="Your full name"
            />
            <span id="name-error" class="text-red-500 text-sm hidden" role="alert" aria-live="polite"></span>
          </div>
          
          <div>
            <label for="email" class="block text-sm font-semibold text-primary-900 dark:text-white mb-2">
              Email <span class="text-red-500" aria-label="required">*</span>
            </label>
            <input
              type="email"
              id="email"
              name="email"
              required
              aria-required="true"
              class="w-full px-4 py-3 border border-primary-200 dark:border-primary-600 rounded-lg bg-white dark:bg-primary-800 text-primary-900 dark:text-white placeholder-primary-500 dark:placeholder-primary-400 focus-ring"
              placeholder="your.email@example.com"
            />
            <span id="email-error" class="text-red-500 text-sm hidden" role="alert" aria-live="polite"></span>
          </div>
          
          <div>
            <label for="subject" class="block text-sm font-semibold text-primary-900 dark:text-white mb-2">
              Subject
            </label>
            <select
              id="subject"
              name="subject"
              class="w-full px-4 py-3 border border-primary-200 dark:border-primary-600 rounded-lg bg-white dark:bg-primary-800 text-primary-900 dark:text-white focus-ring"
            >
              <option value="">Select a topic...</option>
              <option value="collaboration">Collaboration Opportunity</option>
              <option value="consulting">Technical Consulting</option>
              <option value="speaking">Speaking Engagement</option>
              <option value="job">Job Opportunity</option>
              <option value="other">Other</option>
            </select>
          </div>
          
          <div>
            <label for="message" class="block text-sm font-semibold text-primary-900 dark:text-white mb-2">
              Message <span class="text-red-500" aria-label="required">*</span>
            </label>
            <textarea
              id="message"
              name="message"
              required
              aria-required="true"
              rows="5"
              class="w-full px-4 py-3 border border-primary-200 dark:border-primary-600 rounded-lg bg-white dark:bg-primary-800 text-primary-900 dark:text-white placeholder-primary-500 dark:placeholder-primary-400 focus-ring resize-y"
              placeholder="Tell me about your project or what you'd like to discuss..."
            ></textarea>
            <span id="message-error" class="text-red-500 text-sm hidden" role="alert" aria-live="polite"></span>
          </div>
          
          <button
            type="submit"
            class="w-full btn-primary inline-flex items-center justify-center space-x-2"
            aria-describedby="submit-help"
          >
            <Send class="w-5 h-5" />
            <span>Send Message</span>
          </button>
          
          <p id="submit-help" class="text-sm text-primary-600 dark:text-primary-400">
            I'll get back to you within 24 hours.
          </p>
        </form>
        
        <!-- Form Status Messages -->
        <div id="form-success" class="hidden mt-6 p-4 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg">
          <p class="text-green-800 dark:text-green-200 font-medium">Thank you for your message!</p>
          <p class="text-green-700 dark:text-green-300 text-sm mt-1">I'll get back to you soon.</p>
        </div>
        
        <div id="form-error" class="hidden mt-6 p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg">
          <p class="text-red-800 dark:text-red-200 font-medium">Oops! Something went wrong.</p>
          <p class="text-red-700 dark:text-red-300 text-sm mt-1">Please try again or email me directly.</p>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('contact-form');
    const nameField = document.getElementById('name');
    const emailField = document.getElementById('email');
    const messageField = document.getElementById('message');
    
    const nameError = document.getElementById('name-error');
    const emailError = document.getElementById('email-error');
    const messageError = document.getElementById('message-error');
    
    const successMessage = document.getElementById('form-success');
    const errorMessage = document.getElementById('form-error');
    
    // Validation functions
    function validateName(name:string) {
      if (!name.trim()) return 'Name is required';
      if (name.trim().length < 2) return 'Name must be at least 2 characters';
      return '';
    }
    
    function validateEmail(email:string) {
      if (!email.trim()) return 'Email is required';
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (!emailRegex.test(email)) return 'Please enter a valid email address';
      return '';
    }
    
    function validateMessage(message:string) {
      if (!message.trim()) return 'Message is required';
      if (message.trim().length < 10) return 'Message must be at least 10 characters';
      return '';
    }
    
    function showError(errorElement:any, message:string, field:any) {
      if (!errorElement || !field) return;
      errorElement.textContent = message;
      errorElement.classList.remove('hidden');
      field.setAttribute('aria-invalid', 'true');
      field.setAttribute('aria-describedby', errorElement.id);
    }
    
    function hideError(errorElement:any, field:any) {
      if (!errorElement || !field) return;
      errorElement.classList.add('hidden');
      field.removeAttribute('aria-invalid');
      field.removeAttribute('aria-describedby');
    }
    
    function hideAllMessages() {
      successMessage.classList.add('hidden');
      errorMessage.classList.add('hidden');
      hideError(nameError, nameField);
      hideError(emailError, emailField);
      hideError(messageError, messageField);
    }
    
    // Real-time validation
    nameField?.addEventListener('blur', () => {
      const error = validateName(nameField.value);
      if (error) {
        showError(nameError, error, nameField);
      } else {
        hideError(nameError, nameField);
      }
    });
    
    emailField?.addEventListener('blur', () => {
      const error = validateEmail(emailField.value);
      if (error) {
        showError(emailError, error, emailField);
      } else {
        hideError(emailError, emailField);
      }
    });
    
    messageField?.addEventListener('blur', () => {
      const error = validateMessage(messageField.value);
      if (error) {
        showError(messageError, error, messageField);
      } else {
        hideError(messageError, messageField);
      }
    });
    
    // Form submission
    form?.addEventListener('submit', async (e) => {
      e.preventDefault();
      hideAllMessages();
      
      // Validate all fields
      const nameErrorText = validateName(nameField.value);
      const emailErrorText = validateEmail(emailField.value);
      const messageErrorText = validateMessage(messageField.value);
      
      let hasErrors = false;
      
      if (nameErrorText) {
        showError(nameError, nameErrorText, nameField);
        hasErrors = true;
      }
      
      if (emailErrorText) {
        showError(emailError, emailErrorText, emailField);
        hasErrors = true;
      }
      
      if (messageErrorText) {
        showError(messageError, messageErrorText, messageField);
        hasErrors = true;
      }
      
      if (hasErrors) {
        // Focus on first error field
        if (nameErrorText) nameField.focus();
        else if (emailErrorText) emailField.focus();
        else if (messageErrorText) messageField.focus();
        return;
      }
      
      // Simulate form submission (replace with actual endpoint)
      try {
        const submitButton = form.querySelector('button[type="submit"]');
        const originalText = submitButton.innerHTML;
        
        submitButton.disabled = true;
        submitButton.innerHTML = '<svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="m4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>Sending...';
        
        // Simulate API call delay
        await new Promise(resolve => setTimeout(resolve, 1500));
        
        // For demo purposes, always show success
        // In a real app, you would send the form data to your backend
        successMessage.classList.remove('hidden');
        form.reset();
        
        submitButton.disabled = false;
        submitButton.innerHTML = originalText;
        
        // Scroll to success message
        successMessage.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
        
      } catch (error) {
        console.error('Form submission error:', error);
        errorMessage.classList.remove('hidden');
        
        const submitButton = form.querySelector('button[type="submit"]') as HTMLButtonElement;
        submitButton.disabled = false;
        submitButton.innerHTML = '<svg class="w-5 h-5"><use href="#send-icon"></use></svg><span>Send Message</span>';
      }
    });
  });
</script>
